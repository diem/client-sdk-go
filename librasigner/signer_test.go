package librasigner_test

import (
	"encoding/hex"
	"testing"
	"time"

	"github.com/libra/libra-client-sdk-go/libraid"
	"github.com/libra/libra-client-sdk-go/librasigner"
	"github.com/libra/libra-client-sdk-go/librastd"
	"github.com/libra/libra-client-sdk-go/testnet"
	"github.com/stretchr/testify/assert"
)

func TestSign(t *testing.T) {
	var maxGasAmount uint64 = 1000000
	var gasUnitPrice uint64 = 0
	var seq uint64 = 42
	var expiration = time.Unix(1593189628, 0)
	var amount uint64 = 100
	var currencyCode = "LBR"
	sender, _ := hex.DecodeString("e1b3d22871989e9fd9dc6814b2f4fc41")
	receiver, _ := hex.DecodeString("71e931795d23e9634fd24a5992065f6b")

	expectedScript := "01e101a11ceb0b010000000701000202020403061004160205181d0735610896011000000001010000020001000003020301010004010300010501060c0108000506080005030a020a020005060c05030a020a020109000c4c696272614163636f756e741257697468647261774361706162696c6974791b657874726163745f77697468647261775f6361706162696c697479087061795f66726f6d1b726573746f72655f77697468647261775f6361706162696c69747900000000000000000000000000000001010104010c0b0011000c050e050a010a020b030b0438000b05110202010700000000000000000000000000000001034c4252034c425200040371e931795d23e9634fd24a5992065f6b01640000000000000004000400"
	script := librastd.EncodePeerToPeerScriptWithMetadata(receiver, currencyCode, amount, []byte{}, []byte{})
	assert.Equal(t, expectedScript, hex.EncodeToString(script))

	expectedRawTxn := "e1b3d22871989e9fd9dc6814b2f4fc412a0000000000000001e101a11ceb0b010000000701000202020403061004160205181d0735610896011000000001010000020001000003020301010004010300010501060c0108000506080005030a020a020005060c05030a020a020109000c4c696272614163636f756e741257697468647261774361706162696c6974791b657874726163745f77697468647261775f6361706162696c697479087061795f66726f6d1b726573746f72655f77697468647261775f6361706162696c69747900000000000000000000000000000001010104010c0b0011000c050e050a010a020b030b0438000b05110202010700000000000000000000000000000001034c4252034c425200040371e931795d23e9634fd24a5992065f6b0164000000000000000400040040420f00000000000000000000000000034c4252fc24f65e0000000002"
	raw := librasigner.RawTransaction{
		libraid.AccountAddress(sender), seq, script,
		maxGasAmount, gasUnitPrice, currencyCode,
		uint64(expiration.Unix()), testnet.ChainID,
	}

	assert.Equal(t, expectedRawTxn, hex.EncodeToString(raw.ToLCS()))
}
